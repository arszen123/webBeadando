<?php
/**
 * Created by PhpStorm.
 * User: after8
 * Date: 4/7/18
 * Time: 12:06 PM
 */

namespace Model;


use Framework\DBConnection;

class Order extends DBConnection
{

    protected $fileName = 'order.csv';

    protected $workCols = 'id,name,address,order,done';

    protected $key = 'id';

    private $id;
    private $name;
    private $address;
    private $order;
    private $done;


    /**
     * Order constructor.
     * @param $user User
     */
    public function __construct($user = null)
    {
        if ($user !== null) {
            $this->setName($user->getName());
            $this->setAddress($user->getAddress());
            $this->setOrder($user->getOrderList());
            $this->setDone(0);
        }
    }

    /**
     * @return mixed
     */
    public function getDone()
    {
        return $this->done;
    }

    /**
     * @param mixed $done
     */
    public function setDone($done)
    {
        $this->done = $done;
    }

    /**
     * @return mixed
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @return mixed
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * @param mixed $name
     */
    public function setName($name)
    {
        $this->name = $name;
    }

    /**
     * @return mixed
     */
    public function getAddress()
    {
        return $this->address;
    }

    /**
     * @param mixed $address
     */
    public function setAddress($address)
    {
        $this->address = $address;
    }

    /**
     * @return mixed
     */
    public function getOrder()
    {
        return $this->order;
    }

    /**
     * @param mixed $order
     */
    public function setOrder($order)
    {
        if (is_array($order)) {
            $i = 0;
            foreach ($order as $item) {
                $this->order[$i] = $item->getOrderAsArray();
                $i++;
            }
        } else {
            $this->order = json_decode($order);
        }
    }

    public function save()
    {
        $tmp = $this->order;
        $this->order = json_encode($this->order);
        parent::save(); // TODO: Change the autogenerated stub
        $this->order = $tmp;
    }

    public function update()
    {
        $tmp = $this->order;
        $this->order = json_encode($this->order);
        parent::update(); // TODO: Change the autogenerated stub
        $this->order = $tmp;
    }
}